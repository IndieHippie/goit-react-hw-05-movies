{"version":3,"file":"static/js/247.93713e23.chunk.js","mappings":"6MA2CA,UAtCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAKA,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAAIO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GACtB,GAAE,CAACH,IACCG,EAEL,OACE,eACEM,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,UAAW,QALf,SAQGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,gBAAIT,MAAO,CAAEU,MAAO,SAApB,WACE,gBACEC,IACEJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAKL,EACLM,MAAO,IACPC,OAAQ,OAEV,uBAAIP,KACJ,uBAAIC,MAZ8BH,EAD5B,KAkBf,C,mMCvCKU,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,QAAQjB,KAAI,YAC/B,MAAO,CAAEd,GADsD,EAA7BA,GACrBgC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN2B,2CAAH,qDASdC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCS,EADhC,2BADM,cACvBN,EADuB,yBAItBA,EAASC,KAAKC,QAAQjB,KAAI,YAC/B,MAAO,CAAEd,GADsD,EAA7BA,GACrBgC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN4B,2CAAH,sDAUfG,EAAe,mCAAG,WAAMpC,GAAN,uFACN4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,oBACc0B,EADd,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfxB,EAAO,mCAAG,WAAMN,GAAN,uFACE4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,4BACsB0B,IAFxB,cACfG,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOPO,EAAU,mCAAG,WAAMrC,GAAN,uFACD4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,4BACsB0B,IAFrB,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD","sources":["components/Cast/Cast.jsx","servises/API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { getCast } from 'servises/API';\nimport noImage from '../../images/no-image.jpg';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    getCast(id).then(resp => setCast(resp.cast));\n  }, [id]);\n  if (!cast) return;\n\n  return (\n    <ul\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        listStyle: 'none',\n      }}\n    >\n      {cast.map(({ cast_id, profile_path, name, character }) => (\n        <li style={{ color: 'black' }} key={cast_id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : noImage\n            }\n            alt={name}\n            width={100}\n            height={150}\n          />\n          <p>{name}</p>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '67474e2afd071beea09d8edbde001cc8';\n\nexport const getFetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};"],"names":["id","useParams","useState","cast","setCast","useEffect","getCast","then","resp","style","display","flexWrap","alignItems","listStyle","map","cast_id","profile_path","name","character","color","src","noImage","alt","width","height","BASE_URL","API_KEY","getFetchMovies","axios","response","data","results","title","poster_path","getSearchMovies","searchValue","getMovieDetails","getReviews"],"sourceRoot":""}