{"version":3,"file":"static/js/828.26071f91.chunk.js","mappings":"iOAiFA,UArEqB,WAAO,IAAD,IACjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAUvC,IARAC,EAAAA,EAAAA,YAAU,YACSC,EAAAA,EAAAA,IAAgBV,GAE9BW,OACAA,MAAK,SAAAC,GAAI,OAAIR,EAAgBQ,EAApB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACd,IAECG,EAAL,CACA,IAAQc,EACNd,EADMc,MAAOC,EACbf,EADae,aAAcC,EAC3BhB,EAD2BgB,aAAcC,EACzCjB,EADyCiB,OAAQC,EACjDlB,EADiDkB,SAAUC,EAC3DnB,EAD2DmB,YAGvDC,EAAcL,EAAaM,MAAM,EAAG,GAE1C,OACE,4BACE,SAAC,KAAD,CAAMC,MAAO,CAACC,QAAS,OAAQC,GAAItB,EAAnC,sBACA,4BACE,gBACEuB,IACEN,EAAW,yCAC2BA,GAClCO,EAENC,IAAKb,EACLc,MAAO,OAET,4BACE,0BACGd,EADH,KACYM,EADZ,QAGA,2CAEGJ,EAAea,KAAKC,OAAsB,GAAfd,GAAmBe,QAAQ,GAAK,GAF9D,QAIA,sCACA,6BAAKb,MACL,oCACA,uBAAID,EAASA,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAAQ,YAG9D,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASX,GAAG,UAAUpB,MAAO,CAAEC,KAAMH,GAArC,UACE,wCAGJ,yBACE,SAAC,KAAD,CAASsB,GAAG,OAAOpB,MAAO,CAAEC,KAAMH,GAAlC,UACE,2CAKR,SAAC,EAAAkC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAjDmB,CAqD1B,C,mMC9EKC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,QAAQZ,KAAI,YAC/B,MAAO,CAAEnC,GADsD,EAA7BA,GACrBiB,MADkD,EAAzBA,MAClBK,YAD2C,EAAlBA,YAE9C,KAN2B,2CAAH,qDASd0B,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,EADhC,2BADM,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,QAAQZ,KAAI,YAC/B,MAAO,CAAEnC,GADsD,EAA7BA,GACrBiB,MADkD,EAAzBA,MAClBK,YAD2C,EAAlBA,YAE9C,KAN4B,2CAAH,sDAUfZ,EAAe,mCAAG,WAAMV,GAAN,uFACN4C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzC,EADA,oBACc0C,EADd,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAO,mCAAG,WAAMlD,GAAN,uFACE4C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzC,EADA,4BACsB0C,IAFxB,cACfG,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOPK,EAAU,mCAAG,WAAMnD,GAAN,uFACD4C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzC,EADA,4BACsB0C,IAFrB,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD","sources":["pages/MoviesDetails.jsx","servises/API.js"],"sourcesContent":["import {\n  useParams,\n  useLocation,\n  Link,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport noImage from '../images/no-image.jpg';\nimport { getMovieDetails } from 'servises/API';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const responce = getMovieDetails(id);\n    responce\n      .then()\n      .then(resp => setMovieDetails(resp))\n      .catch(error => console.log(error));\n  }, [id]);\n\n  if (!movieDetails) return;\n  const { title, release_date, vote_average, genres, overview, poster_path } =\n    movieDetails;\n\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <div>\n      <Link style={{padding: '5px'}} to={goBack}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : noImage\n          }\n          alt={title}\n          width={240}\n        />\n        <div>\n          <h2>\n            {title} ({releaseDate})\n          </h2>\n          <p>\n            User Score:&nbsp;\n            {vote_average ? Math.fround(vote_average * 10).toFixed(0) : ''}%\n          </p>\n          <h3>Overview</h3>\n          <p> {overview}</p>\n          <h3>Genres</h3>\n          <p>{genres ? genres.map(genre => genre.name).join(', ') : ''}</p>\n        </div>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: goBack }}>\n              <p>Reviews</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"cast\" state={{ from: goBack }}>\n              <p>Cast</p>\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '67474e2afd071beea09d8edbde001cc8';\n\nexport const getFetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};"],"names":["id","useParams","useState","movieDetails","setMovieDetails","goBack","useLocation","state","from","useEffect","getMovieDetails","then","resp","catch","error","console","log","title","release_date","vote_average","genres","overview","poster_path","releaseDate","slice","style","padding","to","src","noImage","alt","width","Math","fround","toFixed","map","genre","name","join","Suspense","fallback","BASE_URL","API_KEY","getFetchMovies","axios","response","data","results","getSearchMovies","searchValue","getCast","getReviews"],"sourceRoot":""}